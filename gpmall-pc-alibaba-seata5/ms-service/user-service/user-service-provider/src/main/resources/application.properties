# 应用名称
spring.application.name=user-service-provider
# dubbo 协议
dubbo.protocol.id=dubbo
dubbo.protocol.name=dubbo
# dubbo 协议端口（ -1 表示自增端口，从 20880 开始）
dubbo.protocol.port=-1

# Dubbo 消费端订阅服务端的应用名，多个服务提供者用逗号分隔
# 这里订阅"自己"，会被忽略掉，请根据实际情况添加
dubbo.cloud.subscribed-services=user-service-provider
# dubbo 服务扫描基准包
dubbo.scan.base-packages=com.gupaoedu.gpmall.user.userserviceprovider

spring.cloud.nacos.discovery.server-addr=192.168.8.133:8848

# 连接Dashboard地址
spring.cloud.sentinel.transport.dashboard=localhost:9999
# 默认是当触发了限流后，才会连接到dashboard，设置为true启动后就连接
spring.cloud.sentinel.eager=true 

spring.cloud.sentinel.datasource.nacos.nacos.serverAddr=192.168.8.133:8848
spring.cloud.sentinel.datasource.nacos.nacos.dataId=com.gupaoedu.gpmall.user.HelloService
spring.cloud.sentinel.datasource.nacos.nacos.groupId=SENTINEL_GROUP
spring.cloud.sentinel.datasource.nacos.nacos.dataType=json
spring.cloud.sentinel.datasource.nacos.nacos.ruleType=flow
spring.cloud.sentinel.datasource.nacos.nacos.username=nacos
spring.cloud.sentinel.datasource.nacos.nacos.password=nacos


spring.datasource.druid.url=jdbc:mysql://192.168.8.132:3306/gpmall-alibaba?useUnicode=true&characterEncoding=utf-8&useSSL=false
spring.datasource.druid.username=root
spring.datasource.druid.password=123456
spring.datasource.druid.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.druid.initial-size=30
spring.datasource.druid.max-active=100
spring.datasource.druid.min-idle=10
spring.datasource.druid.max-wait=60000
spring.datasource.druid.time-between-eviction-runs-millis=60000
spring.datasource.druid.min-evictable-idle-time-millis=300000
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
spring.datasource.druid.filters=stat,wall

mybatis-plus.configuration.map-underscore-to-camel-case=true
mybatis-plus.configuration.auto-mapping-behavior=full
mybatis-plus.mapper-locations=classpath*:mapper/**/*.Mapper.xml


rocketmq.producer.group=user-service
rocketmq.name-server=192.168.8.132:9876


spring.cloud.alibaba.seata.tx-service-group=user-register-seata-service-group
seata.client.undo.log-serialization=kryo